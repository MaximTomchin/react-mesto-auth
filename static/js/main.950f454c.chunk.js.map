{"version":3,"sources":["utils/api.js","utils/auth.js","contexts/CurrentUserContext.js","images/logo.svg","components/Header.js","components/Card.js","components/Main.js","components/Form.js","components/Login.js","components/Register.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/ConfirmDeletionPopup.js","images/union.svg","images/unsuccess.svg","components/InfoTooltip.js","components/ProtectedRoute.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","fetch","method","then","_checkResponse","all","getUserInfo","getInitialCards","data","body","JSON","stringify","id","isLiked","authorization","CurrentUserContext","React","createContext","Header","memo","props","className","src","Logo","alt","email","class","to","link","onClick","text","Card","currentUser","useContext","isOwn","card","owner","_id","likes","some","i","cardDeleteButtonClassName","cardLikeButtonClassName","type","aria-label","onCardDelete","name","onCardClick","onCardLike","length","Main","avatar","onEditAvatar","about","onEditProfile","area-label","onAddPlace","cards","map","Form","useState","setEmail","password","setPassword","onSubmit","evt","preventDefault","noValidate","title","placeholder","value","onChange","target","autoComplete","required","subtitle","children","Login","handleLogin","Register","handleRegister","Footer","Date","getFullYear","PopupWithForm","escFunction","useCallback","keyCode","onClose","useEffect","document","addEventListener","removeEventListener","isOpen","EditProfilePopup","userName","description","formValues","setFormValues","handleInputChange","e","prevState","onUpdateUser","EditAvatarPopup","setAvatar","onUpdateAvatar","minLength","maxLength","AddPlacePopup","setName","setLink","ImagePopup","ConfirmDeletionPopup","onDeleteCard","InfoTooltip","image","isLogged","success","unsuccess","message","ProtectedRoute","isLoggedIn","App","setCurrentUser","loggedIn","setLoggedIn","setIsLogged","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoTooltipOpen","setInfoTooltipOpen","isConfirmDeletionPopupOpen","setIsConfirmDeletionPopupOpen","selectedCard","setSelectedCard","removedCard","setRemovedCard","history","useHistory","closeAllPopups","getAllNeededData","argument","catch","err","alert","localStorage","getItem","token","status","auth","push","console","log","Provider","exact","path","removeItem","changeLikeCardStatus","newCard","newCards","c","setItem","setUserInfo","setNewCard","setUserAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.950f454c.chunk.js","sourcesContent":[" class Api {\n     constructor(config) {\n         this._url = config.url;\n         this._headers = config.headers;\n     }\n\n     _checkResponse(res) {\n         return res.ok ? res.json() : Promise.reject(\"Произошла ошибка\");\n     }\n\n     getInitialCards() {\n         return fetch(`${this._url}${'cards'}`, {\n             method: \"GET\",\n             headers: this._headers\n         })\n             .then(this._checkResponse);\n     }\n\n     getUserInfo() {\n         return fetch(`${this._url}${'users/me'}`, {\n             method: \"GET\",\n             headers: this._headers\n         })\n             .then(this._checkResponse);\n     }\n\n     getAllNeededData() {\n         return Promise.all([this.getUserInfo(), this.getInitialCards()])\n     }\n\n     setNewCard(data) {\n         return fetch(`${this._url}${'cards'}`, {\n             method: \"POST\",\n             headers: this._headers,\n             body: JSON.stringify(data)\n         })\n             .then(this._checkResponse);\n     }\n\n     deleteCard(id) {\n         return fetch(`${this._url}${'cards/'}${id}`, {\n             method: \"DELETE\",\n             headers: this._headers,\n         }).then(this._checkResponse);\n     }\n\n     setUserInfo(data) {\n         return fetch(`${this._url}${'users/me'}`, {\n             method: \"PATCH\",\n             headers: this._headers,\n             body: JSON.stringify(data)\n         })\n             .then(this._checkResponse);\n     }\n\n     setUserAvatar(data) {\n         return fetch(`${this._url}${'users/me/avatar'}`, {\n             method: \"PATCH\",\n             headers: this._headers,\n             body: JSON.stringify(data)\n         })\n             .then(this._checkResponse);\n     }\n\n     changeLikeCardStatus(id, isLiked) {\n         if (isLiked) {\n             return fetch(`${this._url}${'cards/likes/'}${id}`, {\n                 method: \"PUT\",\n                headers: this._headers,\n         }).then(this._checkResponse);\n         } else {\n             return fetch(`${this._url}${'cards/likes/'}${id}`, {\n                 method: \"DELETE\",\n                 headers: this._headers,\n             }).then(this._checkResponse);\n         }\n     }\n }\n\n\n\nconst api = new Api ({\n    url: \"https://mesto.nomoreparties.co/v1/cohort-18/\",\n    headers: {\n        authorization: \"91c2835b-f41e-43e9-bed7-ea071878b36c\",\n        \"Content-Type\": \"application/json\"\n    }\n\n\n});\n\nexport default api","export const url = \"https://auth.nomoreparties.co\";\n\nexport const register = ( password, email) => {\n    return fetch(`${url}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ password, email })\n    })\n        .then((res) => {\n            if(res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        });\n};\n\nexport const authorize = ( password, email ) => {\n    return fetch(`${url}/signin`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ password, email})\n    })\n        .then((res) => {\n            if(res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        });\n};\n\nexport const checkToken = (token) => {\n    return fetch(`${url}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        }\n    })\n        .then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        });\n}","import React from 'react';\n\nconst CurrentUserContext = React.createContext();\n\nexport default CurrentUserContext;","export default __webpack_public_path__ + \"static/media/logo.3c74dd27.svg\";","import React from 'react';\nimport Logo from '../images/logo.svg';\nimport { Link } from 'react-router-dom'\n\nconst Header = React.memo((props) => {\n\n    return (\n        <header className=\"header\">\n            <img src={Logo} className=\"header__logo\" alt=\"Место-Россия\" />\n            <nav className=\"header__navigation\">\n                <p className=\"header__mail\">{props.email}</p>\n                <Link\n                    className={`header__link header__link_${props.class}`}\n                    to={props.link}\n                    onClick={props.onClick}\n                >\n                    {props.text}\n                </Link>\n            </nav>\n        </header>\n    );\n})\n\nexport default Header;","import React from 'react';\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nconst Card = React.memo ((props) => {\n    const currentUser = React.useContext(CurrentUserContext);\n    const isOwn = props.card.owner._id === currentUser._id;\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n    const cardDeleteButtonClassName = (\n        `element__button-reset ${isOwn ? 'element__button-reset_active' : ''}`\n    );\n    const cardLikeButtonClassName = (\n        `element__button-like ${isLiked ? 'element__button-like_active' : ''}`\n    );\n\n    function handleClick () {\n        props.onCardClick(props.card);\n    }\n\n    function handleLikeClick () {\n        props.onCardLike(props.card);\n    }\n\n    function handleDeleteClick () {\n        props.onCardDelete(props.card);\n    }\n\n    return (\n        <figure className=\"element\">\n            <button\n                className={cardDeleteButtonClassName}\n                type=\"reset\"\n                aria-label=\"Delete\"\n                onClick={handleDeleteClick}\n            />\n            <div className=\"element__image-box\">\n                <img\n                    src={props.card.link}\n                    className=\"element__image\"\n                    alt={props.card.name}\n                    onClick={handleClick}\n                />\n            </div>\n            <div className=\"element__info\">\n                <h2 className=\"element__title\">{props.card.name}</h2>\n                <div className=\"element__like-block\">\n                    <button\n                        className={cardLikeButtonClassName}\n                        type=\"button\"\n                        aria-label=\"Like\"\n                        onClick={handleLikeClick}\n                    />\n                    <p className=\"element__number-of-likes\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </figure>\n    );\n})\n\nexport default Card;\n\n","import React from 'react';\nimport Card from './Card';\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nconst Main = React.memo ((props) => {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <figure className=\"profile__box\">\n                    <figure className=\"profile__avatar-box\">\n                        <img className=\"profile__avatar\" src = {currentUser.avatar} alt=\"Фотопортрет\"/>\n                        <button className=\"profile__change-avatar-button\" type=\"button\" aria-label=\"Edit\" onClick={props.onEditAvatar}/>\n                    </figure>\n                    <div className=\"profile__info\">\n                        <div className=\"profile__text-block\">\n                            <h1 className=\"profile__name\" id=\"\">{currentUser.name}</h1>\n                            <p className=\"profile__description\">{currentUser.about}</p>\n                        </div>\n                        <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Edit\" onClick={props.onEditProfile}/>\n                    </div>\n                </figure>\n                <button className=\"profile__add-button\"  type=\"button\" area-label=\"Add\" onClick={props.onAddPlace}\n                />\n            </section>\n\n            <section className=\"elements\">\n                {props.cards.map((card) =>\n                    (<Card\n                        key={card._id}\n                        card={card}\n                        onCardClick={props.onCardClick}\n                        onCardLike = {props.onCardLike}\n                        onCardDelete = {props.onCardDelete}\n                    />)\n                    )}\n            </section>\n        </main>\n    );\n})\n\nexport default Main;","import React, {useState} from 'react';\n\nconst Form = React.memo((props) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    function handleEmail(evt) {\n        setEmail(evt.target.value);\n    }\n\n    function handlePassword(evt) {\n        setPassword(evt.target.value);\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        props.onSubmit(password, email);\n        setPassword('');\n        setEmail('');\n    }\n\n\n    return (\n\n            <div className=\"form\">\n                <form\n                    className=\"form__box\"\n                    onSubmit={handleSubmit}\n                    noValidate\n                >\n                    <h2 className=\"form__title\">{props.title}</h2>\n                    <input\n                        type=\"email\"\n                        className=\"form__input\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={handleEmail}\n                        autoComplete=\"off\"\n                        required\n                    />\n                    <input\n                        type=\"password\"\n                        className=\"form__input\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"Пароль\"\n                        value={password}\n                        onChange={handlePassword}\n                        autoComplete=\"off\"\n                        required\n                    />\n                    <button className=\"form__button\" type=\"submit\">{props.subtitle}</button>\n                    {props.children}\n                </form>\n            </div>\n    );\n})\n\nexport default Form;","import React from 'react';\nimport Form from \"./Form\";\n\nconst Login = React.memo((props) => {\n\n    function handleSubmit(password, email) {\n        props.handleLogin(password, email)\n    }\n\n    return (\n        <main className=\"content\">\n            <Form\n                title=\"Вход\"\n                subtitle=\"Войти\"\n                onSubmit={handleSubmit}\n            />\n        </main>\n    );\n})\n\nexport default Login;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport Form from \"./Form\";\n\nconst Register = React.memo((props) => {\n\n    function handleSubmit(password, email) {\n        props.handleRegister(password, email)\n    }\n\n    return (\n        <main className=\"content\">\n            <Form\n                title=\"Регистрация\"\n                subtitle=\"Зарегистрироваться\"\n                onSubmit={handleSubmit}\n            >\n                <Link className= \"form__link\" to=\"/signin\">Уже зарегистрированы? Войти</Link>\n            </Form>\n\n        </main>\n    );\n})\n\nexport default Register;","import React from 'react';\n\nconst Footer = React.memo ((props) => {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020-{new Date().getFullYear()} Mesto Russia</p>\n        </footer>\n    );\n})\n\nexport default Footer;","import React, {useEffect, useCallback} from 'react';\n\nconst PopupWithForm = React.memo ((props) => {\n    const escFunction = useCallback((evt) => {\n        if(evt.keyCode === 27) {\n            props.onClose();\n        }\n    }, [props]);\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", escFunction, false);\n\n        return () => {\n            document.removeEventListener(\"keydown\", escFunction, false);\n        };\n    }, [escFunction]);\n\n    return (\n        <div className={`popup popup_type_${props.name}` + (props.isOpen ? ' popup_opened' : '')}>\n            <div className=\"popup__overlay\" onClick={props.onClose} />\n            <form className={`popup__container popup__container_type_${props.name}`} name={props.name}\n                  onSubmit={props.onSubmit}>\n                <button className=\"popup__close-button\" type=\"reset\" aria-label=\"Close\" onClick={props.onClose}/>\n                <h2 className=\"popup__title\">{props.title}</h2>\n                {props.children}\n                <button className={`popup__button popup__button_${props.name}`}>{props.subtitle}</button>\n            </form>\n        </div>\n    );\n})\n\nexport default PopupWithForm;","import React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nconst EditProfilePopup = React.memo ((props) => {\n    const currentUser = useContext(CurrentUserContext);\n    const [formValues, setFormValues] = useState({\n        userName:  \"\",\n        description: \"\",\n    });\n\n    const {userName, description} = formValues;\n\n    useEffect(() => {\n        setFormValues({\n            userName: currentUser.name,\n            description: currentUser.about,});\n    }, [currentUser, props.isOpen]);\n\n\n\n    useEffect(() => {\n        if (!props.isOpen) {\n            setFormValues({\n                userName:  currentUser.name,\n                description: currentUser.about,\n            });\n        }\n    }, [currentUser, props.isOpen]);\n\n    function handleInputChange (e) {\n        const {name, value} = e.target;\n        setFormValues(prevState => ({...prevState, [name] : value}))\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({\n            name: userName,\n            about: description,\n        });\n    }\n\n    return (\n        <PopupWithForm\n            name=\"edit\"\n            title=\"Редактировать профиль\"\n            subtitle=\"Сохранить\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n\n            <input\n                className=\"popup__field\"\n                type=\"text\"\n                name=\"userName\"\n                value={userName  || ''}\n                placeholder=\"Имя\"\n                onChange={handleInputChange}\n            />\n\n            <input\n                className=\"popup__field\"\n                type=\"text\"\n                name=\"description\"\n                value={description || ''}\n                placeholder=\"Описание\"\n                onChange={handleInputChange}\n            />\n        </PopupWithForm>\n    );\n})\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nconst EditAvatarPopup = React.memo ((props) => {\n    const  [avatar, setAvatar] = React.useState('');\n\n    function handleChangeAvatar(e) {\n        setAvatar(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n            avatar: avatar,\n        });\n    }\n\n    return (\n        <PopupWithForm\n            name=\"change-avatar\"\n            title=\"Обновить аватар\"\n            subtitle=\"Сохранить\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n            <input\n                className=\"popup__field popup__field_type_change-avatar\"\n                value={avatar || ''}\n                id=\"avatar\"\n                type=\"url\"\n                name=\"avatar\"\n                placeholder=\"Ссылка на картинку\"\n                minLength=\"4\"\n                maxLength=\"200\"\n                onChange={handleChangeAvatar}\n            />\n            <span\n                id=\"avatar-error\"\n                className=\"error error_type_avatar\"\n            />\n        </PopupWithForm>\n    );\n})\n\nexport default EditAvatarPopup;","import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\n\nconst AddPlacePopup = React.memo ((props) => {\n    const [name, setName] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n    React.useEffect(() => {\n        if (!props.isOpen) {\n            setName('');\n            setLink('');\n        }\n    }, [props.isOpen]);\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeLink(e) {\n        setLink(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onAddPlace({\n            name,\n            link,\n        });\n    }\n\n    return (\n        <PopupWithForm\n            name=\"add\"\n            title=\"Новое место\"\n            subtitle=\"Создать\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n            <input\n                className=\"popup__field popup__field_type_add\"\n                value={name || ''}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Название\"\n                minLength=\"2\"\n                maxLength=\"30\"\n                onChange={handleChangeName}\n            />\n            <span\n                id=\"name-card-error\"\n                className=\"error error_type_title\"\n            />\n            <input\n                className=\"popup__field popup__field_type_add\"\n                value={link || ''}\n                type=\"url\"\n                name=\"link\"\n                placeholder=\"Ссылка на картинку\"\n                minLength=\"4\"\n                maxLength=\"200\"\n                onChange={handleChangeLink}\n            />\n            <span\n                id=\"link-error\"\n                className=\"error error_type_link\"\n            />\n        </PopupWithForm>\n    );\n})\n\nexport default AddPlacePopup;","import React, {useEffect, useCallback} from 'react';\n\nconst ImagePopup = React.memo ((props) => {\n    const escFunction = useCallback((evt) => {\n        if(evt.keyCode === 27) {\n            props.onClose();\n        }\n    }, [props]);\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", escFunction, false);\n\n        return () => {\n            document.removeEventListener(\"keydown\", escFunction, false);\n        };\n    }, [escFunction]);\n\n    return (\n        <div className={`popup popup_type_image ${(props.card ? ' popup_opened' : '')}`}>\n            <div className=\"popup__overlay\" onClick={props.onClose} />\n            <figure className=\"popup__image-block\">\n                <button\n                    className=\"popup__close-button popup__close-button_type_image\"\n                    type=\"reset\"\n                    aria-label=\"Close\"\n                    onClick={props.onClose}\n                />\n                <img\n                    src={props.card ? props.card.link : ''}\n                    className=\"popup__image\"\n                    alt={props.card ? props.card.name : ''}\n                />\n                <p className=\"popup__caption\">{props.card ? props.card.name : ''}</p>\n            </figure>\n        </div>\n    );\n})\n\nexport default ImagePopup;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nconst ConfirmDeletionPopup = React.memo ((props) => {\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onDeleteCard(props.card);\n    }\n\n    return (\n        <PopupWithForm\n            name=\"delete-card\"\n            title=\"Вы уверены?\"\n            subtitle=\"Да\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n        </PopupWithForm>\n    );\n})\n\nexport default ConfirmDeletionPopup;","export default __webpack_public_path__ + \"static/media/union.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/unsuccess.df8eddf6.svg\";","import React, {useEffect, useCallback} from 'react'\nimport success from '../images/union.svg'\nimport unsuccess from '../images/unsuccess.svg'\n\nconst InfoTooltip = React.memo ((props) =>  {\n    const image = props.isLogged ? success : unsuccess;\n    const message = props.isLogged ? \"Вы успешно зарегистрировались!\" : \"Что-то пошло не так! Попробуйте ещё раз.\"\n    const escFunction = useCallback((evt) => {\n        if(evt.keyCode === 27) {\n            props.onClose();\n        }\n    }, [props]);\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", escFunction, false);\n\n        return () => {\n            document.removeEventListener(\"keydown\", escFunction, false);\n        };\n    }, [escFunction]);\n\n    return (\n           <div className={'popup popup_type_tooltip' + (props.isOpen ? ' popup_opened' : '')}>\n               <div className=\"popup__overlay\" onClick={props.onClose} />\n               <figure className=\"popup__container popup__container_type_tooltip\">\n                   <button className=\"popup__close-button\" type=\"reset\" aria-label=\"Close\" onClick={props.onClose}/>\n                   <img className=\"popup__tooltip-image\" src={image} alt={message}/>\n                   <h2 className=\"popup__title popup__title_type_tooltip\">{message}</h2>\n               </figure>\n           </div>\n    )\n});\n\nexport default InfoTooltip","import {Route, Redirect} from 'react-router-dom';\n\nfunction ProtectedRoute(props) {\n    return (\n        <Route>\n            {props.isLoggedIn ? props.children : <Redirect to=\"/signin\" />}\n        </Route>\n    )\n}\n\nexport default ProtectedRoute;","import React, {useEffect, useState} from 'react';\nimport { Redirect, Route, Switch, useHistory} from 'react-router-dom';\nimport '../index.css';\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport Header from './Header';\nimport Main from './Main';\nimport Login from './Login';\nimport Register from \"./Register\";\nimport Footer from './Footer';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from './ImagePopup';\nimport ConfirmDeletionPopup from \"./ConfirmDeletionPopup\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n\n\nconst App = React.memo ((props) =>  {\n    const [currentUser, setCurrentUser] = useState({});\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [isLogged, setIsLogged] = useState(false);\n    const [email, setEmail] = useState();\n    const [cards, setCards] = useState([]);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isInfoTooltipOpen, setInfoTooltipOpen] = React.useState(false);\n    const [isConfirmDeletionPopupOpen, setIsConfirmDeletionPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [removedCard, setRemovedCard] = React.useState(null);\n\n    const history = useHistory()\n\n    useEffect(() => {\n        api.getAllNeededData().then(argument => {\n            const [ currentUser, cards ] = argument\n            setCurrentUser(currentUser)\n            setCards(cards)\n        })\n        .catch((err) => alert(err));\n    }, []);\n\n    useEffect(() => {\n        if(localStorage.getItem(\"jwt\")) {\n            let token = localStorage.getItem(\"jwt\")\n            auth.checkToken(token)\n                .then((res) => {\n                    setLoggedIn(true);\n                    setEmail(res.data.email);\n                    history.push(\"/cards\");\n                })\n                .catch(err => console.log(err));\n        }\n    }, [history]);\n\n    function handleLogin(password, email) {\n        auth.authorize(password, email)\n            .then((res) => {\n                localStorage.setItem(\"jwt\", res.token);\n                setLoggedIn(true);\n                setEmail(email);\n                history.push('/cards');\n            })\n            .catch((err) => {\n                setIsLogged(false);\n                setInfoTooltipOpen(true);\n                console.log(err)});\n    }\n\n    function handleRegister(password, email) {\n        auth.register(password, email)\n            .then((res) => {\n                setIsLogged(true);\n                history.push(\"/signin\");\n                setInfoTooltipOpen(true);\n            })\n            .catch((err) => {\n                setIsLogged(false);\n                setInfoTooltipOpen(true);\n                console.log(err);\n            })\n    }\n\n    function onSignOut() {\n        setLoggedIn(false)\n        localStorage.removeItem('jwt');\n    }\n\n    function handleEditAvatarClick () {\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n    }\n\n    function handleEditProfileClick () {\n       setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n    }\n\n    function handleAddPlaceClick () {\n      setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n    }\n\n    function handleConfirmDeletionClick (card) {\n        setIsConfirmDeletionPopupOpen(!isConfirmDeletionPopupOpen);\n        setRemovedCard({\n            _id: card._id,\n        })\n    }\n\n    function handleCardClick (card) {\n        setSelectedCard({\n            name: card.name,\n            link: card.link\n        });\n    }\n\n    function handleUpdateUser (avatar) {\n        api.setUserInfo(avatar).then(currentUser => {\n            setCurrentUser(currentUser);\n            closeAllPopups()\n        })\n            .catch((err) => alert(err));\n    }\n\n    function handleUpdateAvatar (data) {\n        api.setUserAvatar(data).then(currentUser => {\n            setCurrentUser(currentUser);\n            closeAllPopups()\n        })\n            .catch((err) => alert(err));\n    }\n\n    function handleAddPlaceSubmit (card) {\n        api.setNewCard(card).then(newCard => {\n            setCards([newCard, ...cards]);\n            closeAllPopups()\n        })\n            .catch((err) => alert(err));\n    }\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            setCards(newCards);\n        })\n            .catch((err) => alert(err));\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id).then(() => {\n            const newCards = cards.filter(c => c._id !== card._id);\n            setCards(newCards);\n            closeAllPopups()\n        })\n        .catch((err) => alert(err));\n    }\n\n    function closeAllPopups () {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsConfirmDeletionPopupOpen(false);\n        setInfoTooltipOpen(false);\n        setSelectedCard(null);\n    }\n\n    return (\n        <div className=\"page\">\n\n            <CurrentUserContext.Provider value={currentUser}>\n\n                <Switch>\n\n                    <ProtectedRoute\n                        exact path=\"/cards\"\n                        isLoggedIn = {loggedIn}\n                    >\n                        <Header\n                            email={email}\n                            text=\"Выйти\"\n                            link=\"/signin\"\n                            class=\"active\"\n                            onClick={onSignOut}\n                        />\n\n                        <Main\n                            onEditProfile={handleEditProfileClick}\n                            onAddPlace={handleAddPlaceClick}\n                            onEditAvatar={handleEditAvatarClick}\n                            onCardClick={handleCardClick}\n                            cards = {cards}\n                            onCardLike = {handleCardLike}\n                            onCardDelete = {handleConfirmDeletionClick}\n                        />\n\n                    </ProtectedRoute>\n\n                    <Route exact path=\"/signin\">\n                        <Header\n                            link=\"/signup\"\n                            text=\"Зарегистрироваться\"\n                        />\n\n                        <Login\n                            handleLogin={handleLogin}/>\n                    </Route>\n\n                    <Route exact path=\"/signup\">\n                        <Header\n                            link=\"/signin\"\n                            text=\"Войти\"\n                        />\n\n                        <Register\n                            handleRegister={handleRegister}/>\n                    </Route>\n\n                    <Route path=\"/\">\n                        {loggedIn ? (\n                            <Redirect to=\"/cards\" />\n                        ) : (\n                            <Redirect to=\"/signin\" />\n                        )}\n                    </Route>\n\n                </Switch>\n\n                <Footer />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n\n                <ConfirmDeletionPopup\n                    isOpen={isConfirmDeletionPopupOpen}\n                    card = {removedCard}\n                    onClose={closeAllPopups}\n                    onDeleteCard={handleCardDelete}\n                />\n\n                <ImagePopup\n                    card = {selectedCard}\n                    onClose={closeAllPopups}\n                />\n\n                <InfoTooltip\n                    isOpen={isInfoTooltipOpen}\n                    isLogged={isLogged}\n                    onClose={closeAllPopups}\n                />\n\n            </CurrentUserContext.Provider>\n\n        </div>\n    );\n})\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}